#!/usr/bin/env bash

# Set up colour variables
if tput setaf 1 &> /dev/null; then
  tput sgr0;
  bold=$(tput bold);
  reset=$(tput sgr0);
  white=$(tput setaf 15);
  red=$(tput setaf 124);
  orange=$(tput setaf 166);
  yellow=$(tput setaf 136);
  violet=$(tput setaf 61);
  green=$(tput setaf 64);
  blue=$(tput setaf 33);
else
  bold='';
  reset="\e[0m";
  white="\e[1;37m";
  red="\e[1;31m";
  orange="\e[1;33m";
  yellow="\e[1;33m";
  violet="\e[1;35m";
  green="\e[1;32m";
  blue="\e[1;34m";
fi

prompt_git() {
  local s='';
  local branchName='';

  # Check if the current directory is in a Git repository
  git rev-parse --is-inside-work-tree &>/dev/null || return;

  # Check for what branch we're on.
  # Get the short symbolic ref. If HEAD isn't a symbolic ref, get a
  # tracking remote branch or tag. Otherwise, get the
  # short SHA for the latest commit, or give up
  branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
    git describe --all --exact-match HEAD 2> /dev/null || \
    git rev-parse --short HEAD 2> /dev/null || \
    echo '(unknown)')";

  # Check for uncommitted changes in the index
  if ! git diff --quiet --ignore-submodules --cached; then
    s+='+';
  fi;
  # Check for unstaged changes
  if ! git diff-files --quiet --ignore-submodules --; then
    s+='!';
  fi;
  # Check for untracked files
  if [ -n "$(git ls-files --others --exclude-standard)" ]; then
    s+='?';
  fi;
  # Check for stashed files
  if git rev-parse --verify refs/stash &>/dev/null; then
    s+='$';
  fi;

  [ -n "${s}" ] && s=" [${s}]";

  echo -e "${1}${branchName}${2}${s}";
}

# Highlight the user name when logged in as root
if [[ "${USER}" == "root" ]]; then
  userStyle="${red}";
else
  userStyle="${orange}";
fi;

# Set the terminal title and prompt
PS1="\[\033]0;\W\007\]" # `pwd` basename
PS1+="\[${bold}\]\n"; # newline
PS1+="\[${userStyle}\]\u"; # username
PS1+="\[${white}\] @"; # delimiter
PS1+="\[${green}\]\w"; # `pwd` full path
PS1+="\$(prompt_git \"\[${white}\] on \[${violet}\]\" \"\[${blue}\]\")"; # git repository details
PS1+="\[${white}\] \$ \[${reset}\]"; # `$` (and reset color)

export PS1;
export PS2="\[${yellow}\]â†’ \[${reset}\]";

unset bold reset white red orange yellow violet green blue;